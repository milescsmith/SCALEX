[tool.poetry]
name = "scalex"
version = "1.2.0"
description = "Online single-cell data integration through projecting heterogeneous datasets into a common cell-embedding space"
authors = ["Lei Xiong <jsxlei@gmail.com>"]
license = "MIT"
readme = "README.md"
classifiers=[
    'Development Status :: 4 - Beta',
    'Intended Audience :: Science/Research',
    'License :: OSI Approved :: MIT License',
    'Programming Language :: Python :: 3.7',
    'Operating System :: MacOS :: MacOS X',
    'Operating System :: Microsoft :: Windows',
    'Operating System :: POSIX :: Linux',
    'Topic :: Scientific/Engineering :: Bio-Informatics',
]
homepage = 'https://github.com/jsxlei/scalex'
repository = 'https://github.com/jsxlei/scalex'
documentation = "https://scalex.readthedocs.io/en/latest/index.html"

[tool.poetry.scripts]
scalex = "scalex.__main__:app"

[tool.poetry.dependencies]
python = ">=3.10"
numpy = ">=1.24.4"
pandas = ">=2.1.1"
scipy = ">=1.11.3"
scikit-learn = ">=1.3.1"
torch = [
    { platform = "linux", version = ">=2.0.0", source = "pypi", allow-prereleases = false },
    { platform = "darwin", url = "https://download.pytorch.org/whl/nightly/cpu/torch-2.3.0.dev20240126-cp310-none-macosx_11_0_arm64.whl" },
]
scanpy = { git = "https://github.com/scverse/scanpy.git" }
tqdm = ">=4.66.1"
matplotlib = ">=3.8.0"
seaborn = ">=0.13.0"
leidenalg = ">=0.10.2"
# episcanpy = "^0.4.0"
muon = { git = "https://github.com/milescsmith/muon.git", branch = "version_update" }
loguru = "^0.7.2"
typer = "^0.9.0"
rich = "^13.7.1"

[tool.poetry.group.dev.dependencies]
black = "^24.1.0"
ruff = "^0.1.14"
mypy = "^1.8.0"
sourcery = "^1.15.0"


[[tool.poetry.source]]
name = "pytorch_nightly"
url = "https://download.pytorch.org/whl/nightly/cpu"
priority = "explicit"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.isort]
known_typing = "typing,types,typing_extensions,mypy,mypy_extensions"
sections = "FUTURE,TYPING,STDLIB,THIRDPARTY,FIRSTPARTY,LOCALFOLDER"
include_trailing_comma = true
default_section = "FIRSTPARTY"
multi_line_output = 3
indent = 4
force_grid_wrap = 0
use_parentheses = true
line_length = 80

[tool.black]
line-length = 120
target-version = ["py310"]
skip-string-normalization = true
include = '\.pyi?$'
exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
  | foo.py           # also separately exclude a file named foo.py in
                     # the root of the project
)
'''

[tool.ruff]
target-version = "py310"
line-length = 120
select = [
    "A",
    "ARG",
    "B",
    "C",
    "DTZ",
    "E",
    "EM",
    "F",
    "FBT",
    "I",
    "I001",
    "ICN",
    "ISC",
    "N",
    "PLC",
    "PLE",
    "PLR",
    "PLW",
    "Q",
    "RUF",
    "S",
    "T",
    "TID",
    "UP",
    "W",
    "YTT",
]
ignore = [
    "B027",
    "C901",
    "D100",
    "D103",
    "D205",
    "D212",
    "D415",
    "E203",
    "E501",
    "FBT001",
    "FBT002",
    "FBT003",
    "N802",
    "N803",
    "N806",
    "PLR0911",
    "PLR0912",
    "PLR0913",
    "PLR0915",
    "S105",
    "S106",
    "S107",
    "S311",
]
unfixable = [
    "F401",
    "UP007",
]
exclude = [
    ".git",
    ".hg",
    "__pycache__",
    "_bin/*",
    "_build/*",
    "_ig_fbcode_wheel/*",
    "buck-out/*",
    "third-party-buck/*",
    "third-party2/*",
    "dist",
    ".venv",
    ".nox",
    ".mypy_cache",
    ".pytype",
    ".svn",
    "__pypackages__",
]
src = ["src"]

[tool.ruff.extend-per-file-ignores]
"./tests/*" = ["S101", "PLR2004", "F811", "F401", "S301"]
"**/main.py" = ["UP007", "FBT002"]

[tool.ruff.mccabe]
max-complexity = 50

[tool.ruff.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.mypy]
strict = false
warn_unreachable = true
pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true